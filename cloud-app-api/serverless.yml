service: cloud-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: eu-west-2

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-2:*:*"

    - Effect: Allow
      Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          - ses:SendEmail
          - ses:SendRawEmail
      Resource: "*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create-proj.js
  # - path: url path is /proj
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  create-proj:
    handler: create-proj.main
    events:
      - http:
          path: proj
          method: post
          cors: true
          authorizer: aws_iam

  get-proj:
  # Defines an HTTP API endpoint that calls the main function in get-proj.js
  # - path: url path is /proj/{id}
  # - method: GET request
    handler: get-proj.main
    events:
      - http:
          path: proj/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list-proj:
    # Defines an HTTP API endpoint that calls the main function in list-proj.js
    # - path: url path is /proj
    # - method: GET request
    handler: list-proj.main
    events:
      - http:
          path: proj
          method: get
          cors: true
          authorizer: aws_iam

  update-proj:
    # Defines an HTTP API endpoint that calls the main function in update-proj.js
    # - path: url path is /proj/{id}
    # - method: PUT request
    handler: update-proj.main
    events:
      - http:
          path: proj/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete-proj:
    # Defines an HTTP API endpoint that calls the main function in delete-proj.js
    # - path: url path is /proj/{id}
    # - method: DELETE request
    handler: delete-proj.main
    events:
      - http:
          path: proj/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  list-users:
    # Defines an HTTP API endpoint that calls the main function in list-users.js
    # - path: url path is /user
    # - method: GET request
    handler: list-users.main
    events:
      - http:
          path: user
          method: get
          cors: true
          authorizer: aws_iam

  create-user:
      # Defines an HTTP API endpoint that calls the main function in create-user.js
    # - path: url path is /user
    # - method: POST request
    # - authorizer: authenticate using the AWS IAM role
    handler: create-user.main
    events:
      - http:
          path: user
          method: post
          cors: true
          authorizer: aws_iam

  get-user:
  # Defines an HTTP API endpoint that calls the main function in get-user.js
  # - path: url path is /user/{id}
  # - method: GET request
    handler: get-user.main
    events:
      - http:
          path: user/{id}
          method: get
          cors: true
          authorizer: aws_iam

  update-user:
  # Defines an HTTP API endpoint that calls the main function in update-user.js
  # - path: url path is /user/{id}
  # - method: PUT request
    handler: update-user.main
    events:
      - http:
          path: user/{id}
          method: put
          cors: true
          authorizer: aws_iam

  send-email:
    handler: send-email.main
    events:
      - http:
          path: emailto
          method: post
          cors: true
          authorizer: aws_iam

  